---
import Header from '../components/Header.astro';

export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=400" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;500;700&display=swap" rel="stylesheet"/>
    <link href="https://use.fontawesome.com/releases/v6.2.0/css/all.css" rel="stylesheet">
	</head>
	<body class="bg-black font-roboto-mono leading-normal text-neutral-300">
    <Header />
		<slot />
    <footer class="border-t border-t-neutral-500 px-gutter-x pb-gutter-y-0.5 pt-gutter-y-2">
      <div class="grid gap-x-gutter-x gap-y-gutter-y lg:grid-cols-6">
        <p class="self-start justify-self-start lg:col-span-2 text-[max(4vw,3.2rem)] font-bold leading-[1.125] text-white">Information</p>
        <nav class="lg:col-span-4" aria-label="Footer menu">
          <ul class="grid grid-cols-2 gap-x-gutter-x md:grid-cols-4">
            {
              [
                {
                  label: 'Blog',
                  href: '#blog',
                  className: 'row-span-4',
                  children: [
                    {
                      label: 'HTML',
                      href: '#blog',
                    },
                    {
                      label: 'CSS',
                      href: '#blog',
                    },
                    {
                      label: 'JavaScript',
                      href: '#blog',
                    },
                    {
                      label: 'TypeScript',
                      href: '#blog',
                    },
                    {
                      label: 'Three.js',
                      href: '#blog',
                    },
                  ],
                },
                {
                  label: 'Works',
                  href: '#works',
                  className: 'row-span-4',
                  children: [
                    {
                      label: 'Raycaster',
                      href: 'https://github.com/shu913/Raycaster/',
                    },
                    {
                      label: 'Quaternion',
                      href: 'https://github.com/shu913/Quaternion/',
                    },
                    {
                      label: 'Refraction',
                      href: 'https://github.com/shu913/Refraction/',
                    },
                  ],
                },
                {
                  label: 'Home',
                  href: '/',
                  className: 'row-span-4 mt-gutter-y md:mt-0',
                  children: [
                    {
                      label: 'About',
                      href: '#about',
                    },
                    {
                      label: 'Works',
                      href: '#works',
                    },
                    {
                      label: 'Skill',
                      href: '#skill',
                    },
                    {
                      label: 'Blog',
                      href: '#blog',
                    },
                  ],
                },
                {
                  label: 'Contact',
                  href: 'mailto:00sss91327@gmail.com',
                  className: 'mt-gutter-y md:mt-0',
                },
                {
                  label: 'Privacy Policy',
                  href: 'privacy/index.html',
                  className: 'col-start-2 md:col-start-4',
                },
              ].map(({ label, href, children, className }) => {
                return (
                  <li class={className}>
                    <a class="js-type-shuffle inline-block py-[0.3125rem] font-medium transition-colors duration-100 ease-out hover:text-green-500" href={href}>{label}</a>
                    {children && (
                      <ul>
                        {children.map(({ label, href }) => {
                          return (
                            <li>
                              <a class="js-type-shuffle inline-block py-[0.3125rem] text-neutral-500 transition-colors duration-100 ease-out hover:text-green-500" href={href}>{label}</a>
                            </li>
                          );
                        })}
                      </ul>
                    )}
                  </li>
                );
              })
            }
          </ul>
        </nav>
      </div>
      <div class="-mx-gutter-x mt-gutter-y overflow-hidden">
        <p class="flex w-fit animate-[marquee_3750ms_linear_infinite] text-[max(1vw,1rem)] [--translate-x:-10%]">
          {
            [...Array(10)].map((_, i) => {
              return (
                <span class="mr-[1em] whitespace-nowrap" aria-hidden={i !== 0}>Â© Shuji Watanabe</span>
              );
            })
          }
        </p>
      </div>
    </footer>
	</body>
</html>

<script>
  import { TypeShuffle } from '../scripts/typeShuffle';

  const textElements = document.querySelectorAll('.js-type-shuffle');

  textElements.forEach((textElement) => {
    const ts = new TypeShuffle(textElement);

    const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.remove('invisible');
        const maxCellIterations = parseInt(entry.target.getAttribute('data-max-cell-iterations') || '5');
        ts.trigger('fx6', maxCellIterations);
        observer.unobserve(entry.target);
      }
    });
  }, {
    rootMargin: '0px 0px -10% 0px',
  });
    observer.observe(textElement);
  });
</script>
